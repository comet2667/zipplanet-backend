<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.kh.zipplanet.domain.review.mapper.ReviewMapper">
    <insert id="createReview" parameterType="map">
        INSERT INTO user_review(
            review_id, user_id, total_rate, trans_rate, manage_rate, infra_rate, life_rate, title, description, jibun,
            pos, floors_count, pyung_count, room_info, room_option, contract_type_id, start_date, end_date
        ) VALUES (
            SEQ_REVIEWID.NEXTVAL,
            #{reviewCreateRequest.userId},
            #{reviewCreateRequest.totalRate},
            #{reviewCreateRequest.transRate},
            #{reviewCreateRequest.manageRate},
            #{reviewCreateRequest.infraRate},
            #{reviewCreateRequest.lifeRate},
            #{reviewCreateRequest.title},
            #{reviewCreateRequest.description},
            #{reviewCreateRequest.jibun},
            #{reviewCreateRequest.pos},
            #{reviewCreateRequest.floorsCount},
            #{reviewCreateRequest.pyungCount},
            #{reviewCreateRequest.roomInfo},
            #{reviewCreateRequest.roomOption},
            #{reviewCreateRequest.contractTypeId},
            #{reviewCreateRequest.startDate},
            <choose>
                <when test="reviewCreateRequest.endDate !=null and !reviewCreateRequest.endDate.equals('')">
                    #{reviewCreateRequest.endDate}
                </when>
                <otherwise>
                    null
                </otherwise>
            </choose>
        )
    </insert>

    <select id="searchByPos" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        SELECT A.*
        FROM (
            SELECT A.*, (SELECT COUNT(*) FROM USER_REVIEW_ZZIM_LOG WHERE REVIEW_ID = A.REVIEW_ID AND ZZIM_YN = 'Y') AS LIKE_COUNT, ROWNUM AS RNUM
            FROM (
                SELECT A.*, NVL(Z.ZZIM_YN, 'N') AS ZZIM_YN
                FROM (
                    SELECT R.*, M.NICKNAME AS CREATOR
                    FROM USER_REVIEW R
                    JOIN MEMBERS M ON (M.USER_ID = R.USER_ID)
                    WHERE 1=1
                    AND (
                        POS = #{lat} || ',' || #{lng}
                        OR POS = SUBSTR(#{lat}, 1, LENGTH(#{lat})-1) || ',' || #{lng}
                        OR POS = #{lat} || ',' || SUBSTR(#{lng}, 1, LENGTH(#{lng})-1)
                        OR POS = SUBSTR(#{lat}, 1, LENGTH(#{lat})-1) || ',' || SUBSTR(#{lng}, 1, LENGTH(#{lng})-1)
                    )
                    AND R.DELETE_YN = 'N'
                    ORDER BY R.CREATE_DATE DESC
                ) A LEFT OUTER JOIN USER_REVIEW_ZZIM_LOG Z ON (A.REVIEW_ID = Z.REVIEW_ID AND Z.USER_ID = #{userId})
            ) A
        ) A
        WHERE RNUM BETWEEN ${offset} AND ( ${offset} + ${limit} - 1 )
    </select>

    <select id="searchByPosTotalCount">
        SELECT COUNT(*)
        FROM USER_REVIEW
        WHERE 1=1
        AND (
            POS = #{lat} || ',' || #{lng}
            OR POS = SUBSTR(#{lat}, 1, LENGTH(#{lat})-1) || ',' || #{lng}
            OR POS = #{lat} || ',' || SUBSTR(#{lng}, 1, LENGTH(#{lng})-1)
            OR POS = SUBSTR(#{lat}, 1, LENGTH(#{lat})-1) || ',' || SUBSTR(#{lng}, 1, LENGTH(#{lng})-1)
        )
        AND DELETE_YN = 'N'
    </select>

    <select id="searchByKeyword" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        SELECT A.*
        FROM (
            SELECT A.*, (SELECT COUNT(*) FROM USER_REVIEW_ZZIM_LOG WHERE REVIEW_ID = A.REVIEW_ID AND ZZIM_YN = 'Y') AS LIKE_COUNT, ROWNUM AS RNUM
            FROM (
                SELECT A.*, NVL(Z.ZZIM_YN, 'N') AS ZZIM_YN
                FROM (
                    SELECT R.*, M.NICKNAME AS CREATOR
                    FROM USER_REVIEW R
                    JOIN MEMBERS M ON (M.USER_ID = R.USER_ID)
                    WHERE 1=1
                    AND JIBUN LIKE '%' || #{keyword} || '%'
                    AND R.DELETE_YN = 'N'
                    ORDER BY R.CREATE_DATE DESC
                ) A LEFT OUTER JOIN USER_REVIEW_ZZIM_LOG Z ON (A.REVIEW_ID = Z.REVIEW_ID AND Z.USER_ID = #{userId})
            ) A
        ) A
        WHERE RNUM BETWEEN ${offset} AND ( ${offset} + ${limit} - 1 )
    </select>

    <select id="searchByKeywordTotalCount">
        SELECT COUNT(*)
        FROM USER_REVIEW
        WHERE 1=1
        AND JIBUN LIKE '%' || #{keyword} || '%'
        AND DELETE_YN = 'N'
    </select>

    <select id="searchByFilter" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        SELECT A.*
        FROM (
            SELECT A.*, (SELECT COUNT(*) FROM USER_REVIEW_ZZIM_LOG WHERE REVIEW_ID = A.REVIEW_ID AND ZZIM_YN = 'Y') AS LIKE_COUNT, ROWNUM AS RNUM
            FROM (
                SELECT A.*, NVL(Z.ZZIM_YN, 'N') AS ZZIM_YN
                FROM (
                    SELECT R.*, M.NICKNAME AS CREATOR
                    FROM USER_REVIEW R
                    JOIN MEMBERS M ON (M.USER_ID = R.USER_ID)
                    WHERE 1=1
                    <if test="gu != null and gu != ''">
                        AND JIBUN LIKE '%' || #{gu} || '%'
                    </if>
                    <if test="dong != null and dong != ''">
                        AND JIBUN LIKE '%' || #{dong} || '%'
                    </if>
                    <if test="contractTypeId != null and contractTypeId != ''">
                        AND CONTRACT_TYPE_ID = #{contractTypeId}
                    </if>
                    AND TOTAL_RATE BETWEEN 0 AND #{rate}
                    AND R.DELETE_YN = 'N'
                    ORDER BY R.CREATE_DATE DESC
                ) A LEFT OUTER JOIN USER_REVIEW_ZZIM_LOG Z ON (A.REVIEW_ID = Z.REVIEW_ID AND Z.USER_ID = #{userId})
            ) A
        ) A
        WHERE RNUM BETWEEN ${offset} AND ( ${offset} + ${limit} - 1 )
    </select>

    <select id="searchByFilterTotalCount">
        SELECT COUNT(*)
        FROM USER_REVIEW
        WHERE 1=1
        <if test="gu != null and gu != ''">
            AND JIBUN LIKE '%' || #{gu} || '%'
        </if>
        <if test="dong != null and dong != ''">
            AND JIBUN LIKE '%' || #{dong} || '%'
        </if>
        <if test="contractTypeId != null and contractTypeId != ''">
            AND CONTRACT_TYPE_ID = #{contractTypeId}
        </if>
        AND TOTAL_RATE BETWEEN 0 AND #{rate}
        AND DELETE_YN = 'N'
    </select>

    <update id="updateReview" parameterType="map">
        UPDATE user_review
        SET
            total_rate = #{reviewUpdateRequest.totalRate},
            trans_rate = #{reviewUpdateRequest.transRate},
            manage_rate = #{reviewUpdateRequest.manageRate},
            infra_rate = #{reviewUpdateRequest.infraRate},
            life_rate = #{reviewUpdateRequest.lifeRate},
            title = #{reviewUpdateRequest.title},
            description = #{reviewUpdateRequest.description},
            jibun = #{reviewUpdateRequest.jibun},
            pos = #{reviewUpdateRequest.pos},
            floors_count = #{reviewUpdateRequest.floorsCount},
            pyung_count = #{reviewUpdateRequest.pyungCount},
            room_info = #{reviewUpdateRequest.roomInfo},
            room_option = #{reviewUpdateRequest.roomOption},
            contract_type_id = #{reviewUpdateRequest.contractTypeId},
            start_date = #{reviewUpdateRequest.startDate},
            <choose>
                <when test="reviewUpdateRequest.endDate !=null and !reviewUpdateRequest.endDate.equals('')">
                    end_date = #{reviewUpdateRequest.endDate}
                </when>
                <otherwise>
                    end_date = ''
                </otherwise>
            </choose>
        WHERE 1=1
        AND review_id = #{reviewUpdateRequest.reviewId}
        AND user_id = #{reviewUpdateRequest.userId}
    </update>

    <update id="deleteReview" parameterType="map">
        UPDATE user_review
        SET
            delete_yn = 'Y'
        WHERE 1=1
        AND review_id = #{reviewDeleteRequest.reviewId}
        AND user_id = #{reviewDeleteRequest.userId}
    </update>

    <select id="selectAllPos" resultType="com.kh.zipplanet.domain.review.model.PosVo">
        SELECT SUBSTR(POS, 0, INSTR(pos, ',', 1, 1)-1) as lat, SUBSTR(POS, INSTR(pos, ',', 1, 1)+1) as lng, pos
        FROM USER_REVIEW
        WHERE 1=1
        AND DELETE_YN = 'N'
    </select>

    <select id="findById" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        SELECT A.*, (SELECT COUNT(*) FROM USER_REVIEW_ZZIM_LOG WHERE REVIEW_ID = A.REVIEW_ID AND ZZIM_YN = 'Y') AS LIKE_COUNT
        FROM (
            SELECT A.*, NVL(Z.ZZIM_YN, 'N') AS ZZIM_YN
            FROM (
                SELECT R.*, M.NICKNAME AS CREATOR
                FROM USER_REVIEW R
                     JOIN MEMBERS M ON (M.USER_ID = R.USER_ID)
                WHERE 1=1
                AND R.REVIEW_ID = #{reviewId}
                AND R.DELETE_YN = 'N'
            ) A LEFT OUTER JOIN USER_REVIEW_ZZIM_LOG Z ON (A.REVIEW_ID = Z.REVIEW_ID AND Z.USER_ID = #{userId})
        ) A
    </select>

    <update id="upHit">
        UPDATE user_review
        SET view_count = view_count + 1
        WHERE 1=1
        AND review_id = #{reviewId}
    </update>

    <select id="searchMyReview" resultType="com.kh.zipplanet.domain.review.model.ReviewVo">
        select * from user_review
        where 1=1
        and user_id = #{userId}
        and delete_yn = 'N'
    </select>
</mapper>